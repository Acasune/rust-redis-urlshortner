import useSWR from 'swr'
import { ApiContext, Data } from '@/types/data'
import { fetcher } from '@/ulils'
import Head from 'next/head'

export default function Home() {
  const {ret, isLoading} = useGetAllUrls()
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <main>
        <div>
        {ret.map((item, idx) => (
          <><p>{item.hashed}</p><p>{item.url}</p></>
          ))}
        </div>
      </main>
    </>
  )
}

type UseGetAllUrls = {
  ret: [{hashed:string, url:string}]
  isLoading: boolean
  isError: boolean
}

const useGetAllUrls= () : UseGetAllUrls => {
 
  const fetcher = (url:string):Promise<any> => fetch(url).then(res =>{
    console.log(res)
    return res.json()
  })
  const path :string = process.env.API_BASE_URL || 'http://localhost:8080/'
  
  const {data, error} = useSWR<Data>(
    path, fetcher
  )

  return {
    ret: data ? data.urls :[{hashed:'',url:''}],
    isLoading: !error && !data,
    isError: !!error, }
}

